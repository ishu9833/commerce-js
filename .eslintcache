[{"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\App.js":"1","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Product\\Product.jsx":"2","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Products.jsx":"3","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Product\\styles.js":"4","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Navbar\\Navbar.jsx":"5","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Navbar\\styles.js":"6","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\index.js":"7","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\lib\\commerce.js":"8","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\styles.js":"9","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\index.js":"10","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\Cart.jsx":"11","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\styles.js":"12","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\CartItem\\styles.js":"14","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Checkout\\Chackout.jsx":"15","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\AddressForm.jsx":"16","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\CustomTextField.jsx":"17","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Checkout\\styles.js":"19","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":3325,"mtime":1607317578153,"results":"21","hashOfConfig":"22"},{"size":1335,"mtime":1606713355046,"results":"23","hashOfConfig":"22"},{"size":737,"mtime":1606712972133,"results":"24","hashOfConfig":"22"},{"size":405,"mtime":1606638047454,"results":"25","hashOfConfig":"22"},{"size":1460,"mtime":1606916355077,"results":"26","hashOfConfig":"22"},{"size":1856,"mtime":1606654438053,"results":"27","hashOfConfig":"22"},{"size":116,"mtime":1606655195355,"results":"28","hashOfConfig":"22"},{"size":127,"mtime":1606657426988,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1606655620036,"results":"30","hashOfConfig":"22"},{"size":147,"mtime":1606626099964,"results":"31","hashOfConfig":"22"},{"size":1937,"mtime":1607106166793,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1606748919802,"results":"33","hashOfConfig":"22"},{"size":1540,"mtime":1607313667602,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1606749118563,"results":"35","hashOfConfig":"22"},{"size":3931,"mtime":1607318390549,"results":"36","hashOfConfig":"22"},{"size":5322,"mtime":1606932004712,"results":"37","hashOfConfig":"22"},{"size":612,"mtime":1607315591866,"results":"38","hashOfConfig":"22"},{"size":3016,"mtime":1607318352519,"results":"39","hashOfConfig":"22"},{"size":1208,"mtime":1606827541023,"results":"40","hashOfConfig":"22"},{"size":1117,"mtime":1607004104261,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"fld3iw",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\App.js",["91"],"import React, { useEffect, useState } from 'react';\nimport { Navbar, Products } from './components';\nimport Cart from './components/Cart/Cart';\nimport { commerce } from './lib/commerce';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Checkout from './components/CheckoutForm/Checkout/Chackout';\n\nconst App = () => {\n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState({});\n    const [order, setOrder] = useState({});\n    const [errorMessage, setErrorMessage] = ('');\n\n    const fetchProducts = async () => {\n        const { data } = await commerce.products.list();\n\n        setProducts(data);\n    }\n\n\n    const fetchCart = async() => {\n        const cart = await commerce.cart.retrieve();\n        setCart(cart)\n    }\n\n    const handleAddToCart = async(productId, quantity) => {\n        const item = await commerce.cart.add(productId, quantity);\n        setCart(item.cart);\n    }\n\n    const handleUpdateCartQty = async(productId, quantity) => {\n        const { cart } = await commerce.cart.update(productId, { quantity })\n        setCart(cart)\n    }\n\n    const handleRemoveFromCart = async(productId, quantity) => {\n        const { cart } = await commerce.cart.remove(productId)\n        setCart(cart)\n    }\n\n    const handleEmptyCart = async() => {\n        const { cart } = await commerce.cart.empty()\n        setCart(cart)\n    }\n\n    const refresh = async() => {\n        const newCart = await commerce.cart.refresh();\n        setCart(newCart);\n\n    }\n    const handleCaptureCheckout = async(checkoutTokenId, newOrder) => {\n        try {\n            const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n            setOrder(incomingOrder)\n            refresh()\n        } catch (error) {\n            // const  newError = error.data.error.message\n            // setErrorMessage(newError);\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCart();\n    }, []);\n\n    // console.log(cart);\n    return ( \n        <Router>\n            <div>\n                <Navbar totalItems={cart.total_items}  />\n                    <Switch>\n                        <Route  exact path = \"/\">\n                            <Products \n                                products = { products }\n                                onAddToCart = { handleAddToCart }\n                                handleUpdateCartQty  />\n                        </Route>\n                        <Route exact path=\"/cart\">\n                            <Cart \n                                cart={cart} \n                                handleUpdateCartQty={handleUpdateCartQty} \n                                handleRemoveFromCart={handleRemoveFromCart} \n                                handleEmptyCart={handleEmptyCart} />\n                        </Route>\n                        <Route path=\"/checkout\" exact>\n                            <Checkout \n                                cart={cart} \n                                order={order} \n                                onCaptureCheckout={handleCaptureCheckout} \n                                error={errorMessage} />\n                        </Route>\n                        </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;",["92","93"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Product\\Product.jsx",[],["94","95"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Products.jsx",[],["96","97"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\Product\\styles.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Navbar\\Navbar.jsx",["98","99"],"import { AppBar, Badge, Toolbar, IconButton, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport  logo  from '../../assets/commerce.png';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nconst Navbar = ({totalItems}) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' className={classes.appBar} color='inherit' >\r\n                <Toolbar>\r\n                    <Typography component={ Link } to='/' variant='h6' className={classes.title} color='inherit' >\r\n                        <img src={logo} alt='Commerce.js' height='25px' className={classes.image} />\r\n                        TechShop\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname ==='/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={ Link } to='/cart' aria-label='show cart items' color='inherit'>\r\n                            <Badge badgeContent={totalItems} color='secondary'>\r\n                                <ShoppingCart/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>)}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;",["100","101"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Navbar\\styles.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\index.js",[],["102","103"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\lib\\commerce.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Products\\styles.js",[],["104","105"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\index.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\Cart.jsx",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\styles.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\Cart\\CartItem\\styles.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Checkout\\Chackout.jsx",["106"],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\AddressForm.jsx",["107","108"],"import React, { useEffect, useState } from 'react';\r\nimport { InputLabel, Grid, Typography, Select, MenuItem, Button } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from './CustomTextField';\r\nimport { commerce } from '../../lib/commerce'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - ${sO.price.formatted_with_symbol}` }))\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0])\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region })\r\n\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry])\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next( {...data, shippingCountry, shippingSubdivision, shippingOption}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput required name='firstName' label='First Name' />\r\n                        <FormInput required name='lastName' label='Last Name' />\r\n                        <FormInput required name='Address1' label='Address' />\r\n                        <FormInput required name='email' label='Email' />\r\n                        <FormInput required name='city' label='City' />\r\n                        <FormInput required name='zip' label='Zip/Postal Code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}> {country.label}</MenuItem>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivisions</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Option</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>{option.label} </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br/>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <Button component={Link} to='/cart' variant='outlined'>Back to Cart</Button>\r\n                                    <Button type=\"submit\" variant='contained' color='primary'>Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressForm;","G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"G:\\My-Port-Projects\\E-commerce\\e-commerce-js\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"109","severity":1,"message":"110","line":16,"column":26,"nodeType":"111","messageId":"112","endLine":16,"endColumn":41},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":"109","severity":1,"message":"121","line":1,"column":46,"nodeType":"111","messageId":"112","endLine":1,"endColumn":54},{"ruleId":"109","severity":1,"message":"122","line":1,"column":56,"nodeType":"111","messageId":"112","endLine":1,"endColumn":60},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":32,"column":8,"nodeType":"131","endLine":32,"endColumn":14,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":44,"column":8,"nodeType":"131","endLine":44,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":52,"column":8,"nodeType":"131","endLine":52,"endColumn":29,"suggestions":"136"},"no-unused-vars","'setErrorMessage' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],["137"],["138"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.",["137"],["138"],["137"],["138"],["137"],["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [cart, history]",{"range":"148","text":"149"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"150","text":"151"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"152","text":"153"},[1201,1207],"[cart, history]",[2096,2098],"[checkoutToken.id]",[2363,2384],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]